%% Code to understand what adding heterogeneity into eigenmodes actually does
clear
clc

% Setup project by loading necessary functions
setupProject

% Load config file
config = jsondecode(fileread(fullfile(pwd, "config.json")));
atlas = config.atlas;
space = config.space;
den = config.den;
surf = config.surf;
hemi = config.hemi;
nModes = config.n_modes;
realHeteroMaps = config.hetero_maps;
emodeDir = config.emode_dir;
surfDir = config.surface_dir;
resultsDir = config.results_dir;
pang2023dir = '/fs03/kg98/vbarnes/repos/BrainEigenmodes';

dset = "nm-subset";
heteroLabel = "myelinmap"; % only plot one hetero map per figure
scale = "cmean";
alphaVals = 1.0;
beta = -0.5;
nAlpha = length(alphaVals);

disp("Loading modes and empirical data...")
% Load Yeo surface file
[vertices, faces] = read_vtk(sprintf('%s/atlas-yeo_space-%s_den-%s_surf-%s_hemi-%s_surface.vtk', ...
    surfDir, space, den, surf, hemi));
surface.vertices = vertices';
surface.faces = faces';
% Get cortex indices
medialMask = dlmread(sprintf('%s/atlas-yeo_space-%s_den-%s_hemi-%s_medialMask.txt', surfDir, space, ...
    den, hemi));
cortexInds = find(medialMask);

% Load parcellation
parc_name = 'Glasser360';
parc = dlmread(sprintf('%s/data/parcellations/fsLR_32k_%s-lh.txt', pang2023dir, parc_name));
nParcels = length(unique(parc(parc>0)));

% Load homogeneous eigenmodes and eigenvalues
geomDesc = 'hetero-%s_atlas-%s_space-%s_den-%s_surf-%s_hemi-%s_n-%i_maskMed-True';
geomModes = dlmread(fullfile(emodeDir, sprintf(geomDesc, "None", atlas, space, den, surf, hemi, nModes) ...
    + "_emodes.txt"));
geomEvals = dlmread(fullfile(emodeDir, sprintf(geomDesc, "None", atlas, space, den, surf, hemi, nModes) ...
    + "_evals.txt"));

% Load heterogeneous eigenmodes and eigenvalues
heteroDesc = 'hetero-%s_atlas-%s_space-%s_den-%s_surf-%s_hemi-%s_n-%i_scale-%s_alpha-%.1f_beta-%.1f_maskMed-True';
heteroModes = zeros([size(geomModes), nAlpha]);
heteroEvals = zeros(nAlpha, nModes);
for ii=1:nAlpha  
    heteroModes(:, :, ii) = dlmread(fullfile(emodeDir, sprintf(heteroDesc, heteroLabel, atlas, ...
        space, den, surf, hemi, nModes, scale, alphaVals(ii), beta) + "_emodes.txt")); 
    heteroEvals(ii, :) = dlmread(fullfile(emodeDir, sprintf(heteroDesc, heteroLabel, atlas, space, ...
        den, surf, hemi, nModes, scale, alphaVals(ii), beta) + "_evals.txt")); 
end

% Load example single-subject rfMRI time series data
rfMRI = load(fullfile(pang2023dir, sprintf('data/examples/subject_rfMRI_timeseries-%s.mat', hemi));
T = size(rfMRI.timeseries, 2);
% Extract upper triangle indices
triuInds = calc_triu_ind(zeros(nParcels, nParcels));

%% Calculate FC reconstruction accuracy
% Calculate empirical FC
empTimeSeries = calc_parcellate(parc, rfMRI.timeseries);
empTimeSeries = calc_normalize_timeseries(empTimeSeries');
empTimeSeries(isnan(empTimeSeries)) = 0;

empFC = empTimeSeries'*empTimeSeries;
empFC = empFC/T;
FCvec_emp = empFC(triuInds);

% Calculate reconstructed FC and accuracy (slow to run with more modes)
FCvec_recon = zeros(length(triuInds), num_modes);
recon_corr_parc = zeros(1, num_modes);               
for mode = 1:num_modes
    recon_temp = eigenmodes(:, 1:mode)*squeeze(recon_beta(1:mode,:,mode));
 
    data_parc_recon = calc_parcellate(parc, recon_temp);
    data_parc_recon = calc_normalize_timeseries(data_parc_recon');
    data_parc_recon(isnan(data_parc_recon)) = 0;

    FC_recon_temp = data_parc_recon'*data_parc_recon;
    FC_recon_temp = FC_recon_temp/T;

    FCvec_recon(:,mode) = FC_recon_temp(triuInds);
                    
    recon_corr_parc(mode) = corr(FCvec_emp, FCvec_recon(:,mode));
end
